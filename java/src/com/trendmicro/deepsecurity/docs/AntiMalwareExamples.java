/* 
 * Copyright 2019 Trend Micro.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *	  http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.trendmicro.deepsecurity.docs;

import com.trendmicro.deepsecurity.ApiException;
import com.trendmicro.deepsecurity.api.PoliciesApi;
import com.trendmicro.deepsecurity.model.Policy;
import com.trendmicro.deepsecurity.model.AntiMalwarePolicyExtension;

/**
 * Configures the Anti-Malware module.
 */
public class AntiMalwareExamples {

	/**
	 * Turns on Anti-Malware for a policy and sets the real time scan configuration to use.
	 * 
	 * @param policyID The ID of the policy to configure.
	 * @param realTimieScanConfigID The ID of the real time scan configuration.
	 * @param scheduleID The ID of the schedule to use for real time scans.
	 * @param apiVersion The version of the API to use.
	 * @throws ApiException if a problem occurs when modifying the policy on Deep Security Manager.
	 * @return The modified policy.
	 */
	public static Policy configureAntiMalware(Integer policyID, Integer realTimeScanConfigID, Integer scheduleID, String apiVersion) throws ApiException {

		// Create a PolicyLevelConfigurationForTheAntiMalwareModule object and configure
		AntiMalwarePolicyExtension antiMalwarePolicyExtension = new AntiMalwarePolicyExtension();
		antiMalwarePolicyExtension.setState(AntiMalwarePolicyExtension.StateEnum.ON);
		antiMalwarePolicyExtension.setRealTimeScanConfigurationID(realTimeScanConfigID);
		antiMalwarePolicyExtension.setRealTimeScanScheduleID(scheduleID);

		Policy policy = new Policy();
		policy.setAntiMalware(antiMalwarePolicyExtension);

		// Modify the policy on Deep Security Manager
		PoliciesApi policiesApi = new PoliciesApi();
		return policiesApi.modifyPolicy(policyID, policy, Boolean.FALSE, apiVersion);
	}
}
