/*
 * Copyright 2019 Trend Micro.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Modifies a policy to set the Anti-Malware state to ON and set the real time scan configuration.
 * @param {ApiClient} api The Deep Security API exports.
 * @param {Integer} policyID The ID of the policy to modify.
 * @param {Integer} realTimeScanConfigID The ID of the real time scan configuration to use.
 * @param {Integer} scheduleID The ID of the schedule to use for real time scans.
 * @param {String} apiVersion The API version to use.
 * @returns {Promise} A promise object that resolves to the ID of the modified policy.
 */
exports.modifyAntiMalwarePolicy = function(api, policyID, realTimeScanConfigID, scheduleID, apiVersion) {
  return new Promise((resolve, reject) => {
    const policy = new api.Policy();
    const policiesApi = new api.PoliciesApi();

    //Create and configure the AntiMalwarePolicyExtension object
    const antiMalwarePolicyExtension = new api.AntiMalwarePolicyExtension();
    antiMalwarePolicyExtension.state = api.AntiMalwarePolicyExtension.StateEnum.on;
    antiMalwarePolicyExtension.realTimeScanConfigurationID = realTimeScanConfigID;
    antiMalwarePolicyExtension.realTimeScanScheduleID = scheduleID;

    //Add to the policy
    policy.antiMalware = antiMalwarePolicyExtension;

    //Send the change to Deep Security Manager
    policiesApi
      .modifyPolicy(policyID, policy, apiVersion, { overrides: false })
      .then(data => {
        resolve(data);
      })
      .catch(error => {
        reject(error);
      });
  });
};
